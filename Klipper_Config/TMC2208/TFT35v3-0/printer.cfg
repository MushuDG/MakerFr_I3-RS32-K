################################################################################
# General Information
################################################################################
# Author:               MushuDG
# Project:              MakerFr_I3-RS32-K
# File:                 printer.cfg
# Creation Date:        Aug. 28, 2024
# Modification Date:    Sep. 04, 2024
# Description:          Configuration file for the MakerFr_I3-RS32-K 3D printer.
#                       This file controls settings for motor control, heating,
#                       sensors, and other components, optimized for Klipper.
################################################################################

########################################
# MCU Configuration
########################################
[mcu]
# The microcontroller unit (MCU) is responsible for controlling the hardware.
# Specify the serial port that the microcontroller is connected to.
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_24004C001950425938323120-if00
# Communication baud rate (common value is 115200)
baud: 115200

########################################
# Printer Settings
########################################
[printer]
# Kinematics type defines the movement system of the printer. 
# In this case, it's cartesian (typical for rectangular beds like Prusa).
kinematics: cartesian
# Maximum movement speed of the printer's axes in mm/s.
max_velocity: 300
# Maximum acceleration in mm/s^2, affecting how fast the printer changes speed.
max_accel: 500
# Maximum speed for the Z-axis (vertical movement), usually slower than X and Y.
max_z_velocity: 15
# Maximum Z-axis acceleration.
max_z_accel: 100
# Square corner velocity helps with sharp turns. Lower values mean smoother 
# cornering but slower movement.
square_corner_velocity: 10.0  # Marlin equivalent: XJERK and YJERK
# IMPORTANT: If you enable [input_shaper], you should set square_corner_velocity to 5.0
# to avoid resonance issues. For more information on input shaping, refer to:
# https://www.klipper3d.org/Resonance_Compensation.html

########################################
# Stepper Motor Configurations
########################################
# These sections configure the stepper motors that control movement along each axis.

[stepper_x]
# X-axis motor pin assignments (control movement of the extruder head left to right)
step_pin: PC8
dir_pin: PC9
enable_pin: !PA15  # The "!" inverts the signal
# Define motor microstepping and distance for one rotation.
microsteps: 16
rotation_distance: 32  # Distance moved per full step.
# Endstop pin detects when the axis has reached its home position.
endstop_pin: !PD3
position_min: -11  # Minimum allowed position (negative if the endstop is offset).
position_endstop: -11  # Where the endstop is located.
position_max: 200  # Maximum allowed position in mm.
homing_speed: 60  # Speed when homing the X-axis.

[stepper_y]
# Y-axis motor configuration (moves the bed forward and backward)
step_pin: PA10
dir_pin: !PA14
enable_pin: !PA13
microsteps: 16
rotation_distance: 32
endstop_pin: !PD2
position_min: -3  # Min position (accounts for any offset).
position_endstop: -3
position_max: 215
homing_speed: 60  # Speed when homing Y-axis.

[stepper_z]
# First Z-axis motor configuration (controls vertical movement)
step_pin: PC6
dir_pin: PC7
enable_pin: !PA9
microsteps: 16
rotation_distance: 8  # Distance moved for each step.
# The Z-axis uses a probe (BLTouch) as an endstop to detect bed leveling.
endstop_pin: probe:z_virtual_endstop
position_min: -1  # Min Z height (below zero if nozzle can dip below bed level).
position_max: 210  # Max Z height (bed to nozzle clearance).
homing_speed: 6  # Homing speed for Z-axis is much slower than X and Y.

[stepper_z1]
# Second Z-axis motor (used for dual Z setups for better stability).
step_pin: PB12
dir_pin: PB11
enable_pin: !PA8
microsteps: 16
rotation_distance: 8

[extruder]
# Extruder stepper motor configuration (controls filament extrusion)
step_pin: PB0
dir_pin: PB1
enable_pin: !PC4
microsteps: 16
rotation_distance: 6.01  # This affects extrusion accuracy; calibrate for precise extrusion.
# Define nozzle and filament parameters.
nozzle_diameter: 0.400  # In mm, for typical 0.4 mm nozzle.
filament_diameter: 1.750  # Filament diameter (1.75 mm is standard).
max_extrude_only_distance: 150  # Max extrusion distance without movement (prevents filament jams).
# Heater and temperature sensor settings.
heater_pin: PC5
sensor_type: EPCOS 100K B57560G104F  # Thermistor type for reading the temperature.
sensor_pin: PA2
# Define limits and PID tuning parameters for controlling temperature.
min_temp: 0
max_temp: 250
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982

########################################
# TMC2208 Stepper Driver Configuration
########################################
# These sections define settings for TMC2208 stepper motor drivers, which provide
# features like silent operation and current control.

[tmc2208 stepper_x]
uart_pin: PD9  # UART communication pin for the TMC driver.
run_current: 1.2  # Current setting for stepper motor, higher values increase torque.
# ^^^This value defines the RMS current (in amps) supplied to the stepper motor.
# The run_current was calculated based on the peak current rating of the motors.
# 1. Start with the peak current (I_peak) provided by the motor manufacturer.
# 2. Convert the peak current to RMS using the formula: I_rms = I_peak / √2
# 3. To ensure safe operation and reduce motor heating, apply a 15% reduction: 
#    I_rms_final = I_rms * 0.85
# For example, if I_peak = 2A, then I_rms_final = 1.2A after applying these steps.
diag_pin: PD3  # Diagnostic pin used for fault detection.
interpolate: True
# ^^^This option enables microstep interpolation in the TMC2208 stepper driver.
# When enabled, the driver will internally interpolate 16 microsteps into 256 microsteps.
# 1. This feature allows for smoother motion and quieter operation at low speeds,
#    without needing to actually command 256 microsteps from the firmware.
# 2. It helps reduce noise and vibration, especially beneficial during low-speed movements.
# 3. It does not impact overall precision but improves smoothness.
# Note: The setting is highly recommended for silent operation and better motor performance.

[tmc2208 stepper_y]
uart_pin: PD8
run_current: 1.2
diag_pin: PD2
interpolate: True

[tmc2208 stepper_z]
uart_pin: PB10
run_current: 1.2
diag_pin: PC3
interpolate: True

[tmc2208 stepper_z1]
uart_pin: PB2
run_current: 1.2
diag_pin: PC2
interpolate: True

[tmc2208 extruder]
uart_pin: PA6
run_current: 1.2
interpolate: True
# No diag pin is configured for the extruder.

########################################
# Bed Heater Configuration
########################################
[heater_bed]
# Configuration for the heated bed.
heater_pin: PA5  # Pin controlling the bed heater.
sensor_type: EPCOS 100K B57560G104F  # Thermistor type for temperature readings.
sensor_pin: PA1  # Pin where the bed thermistor is connected.
min_temp: 0  # Minimum allowable bed temperature.
max_temp: 130  # Maximum bed temperature (130°C is typical for heated beds).

########################################
# Fan Configuration
########################################
[fan]
# General fan for part cooling.
pin: PA4  # Pin controlling the fan.
max_power: 1.0  # Max fan power (100%).
shutdown_speed: 0  # Fan speed when the printer is idle or powered down.

[heater_fan heatbreak_cooling_fan]
# Dedicated fan for cooling the hotend's heatbreak.
pin: PA3  # Pin controlling the hotend cooling fan.
heater: extruder  # Fan is tied to extruder temperature.
heater_temp: 0.0  # Fan starts at 0°C.
fan_speed: 1.0  # Runs at full power.

########################################
# BLTouch Configuration
########################################
[bltouch]
# BLTouch configuration (automatic bed leveling sensor).
sensor_pin: PC13
control_pin: PC15
x_offset: 25.5  # X-axis offset of the probe from the nozzle.
y_offset: 1  # Y-axis offset of the probe from the nozzle.
z_offset: 0.5  # Z-axis offset of the probe from the nozzle.
speed: 5.0  # Probing speed for BLTouch.
set_output_mode: 5V  # Sets probe output mode to 5V.
pin_up_touch_mode_reports_triggered: True  # Reports triggered status correctly.
stow_on_each_sample: False  # Avoid stowing between probe points (saves time).
probe_with_touch_mode: True  # Probe in touch mode for better accuracy.

########################################
# Bed Mesh Leveling
########################################
[bed_mesh]
# Bed leveling settings for compensating for surface unevenness.
speed: 100  # Probing speed for bed mesh calibration.
horizontal_move_z: 5  # Z-lift during mesh probing (prevents head from crashing into bed).
mesh_min: 15, 15  # Minimum X, Y coordinates for probing.
mesh_max: 185, 185  # Maximum X, Y coordinates for probing.
probe_count: 5, 5  # Number of probe points in X and Y directions.
fade_start: 1.0  # Start fading compensation at 1mm height.
fade_end: 10.0  # Stop compensation at 10mm height.

########################################
# Safe Z Homing
########################################
[safe_z_home]
# Home Z-axis in the center of the bed for safe homing (avoids crashing).
home_xy_position: 110, 100  # Set to the center of your bed.
speed: 50  # Move speed to home position.
z_hop: 10  # Z-axis lift before homing to prevent nozzle crashing.
z_hop_speed: 20  # Speed for the Z-hop.

########################################
# Z-Tilt Adjustment
########################################
[z_tilt]
# Dual Z-motor tilt adjustment to ensure a level bed.
z_positions:
    -11,0  # X positions of the Z motors.
    220,0
points: 
    40,100  # Points to probe for detecting tilt.
    160,100
speed: 200  # Speed between points.
horizontal_move_z: 10  # Z-lift between points to avoid collisions.
retries: 20  # Number of retries if measurements are inconsistent.
retry_tolerance: 0.005  # Tolerance for successful bed leveling.

########################################
# Input Shaping (Optional)
########################################
# Reduces vibrations to improve print quality, especially at higher speeds.
# Uncomment and adjust the following section to enable input shaping.
# If you enable input shaping, adjust square_corner_velocity in [printer] to 5.0 
# to avoid introducing resonance. 
# More information: https://www.klipper3d.org/Resonance_Compensation.html
#[input_shaper]
#shaper_freq_x: 29
#shaper_freq_y: 32
#shaper_type: ei  # EI type is a good start; adjust based on tests.

########################################
# Pause and Resume
########################################
[pause_resume]
# Settings for pausing and resuming prints (useful during filament changes).
recover_velocity: 50.  # Speed to resume printing after a pause.

########################################
# Board Pin Assignments
########################################
[board_pins]
# Aliases for easy reference to specific board pin assignments.
aliases:
    # EXP1 header pins.
    EXP1_1=PD5, EXP1_3=PB3, EXP1_5=PB5, EXP1_7=PB7, EXP1_9=<GND>,
    EXP1_2=PD4, EXP1_4=PD6, EXP1_6=PB4, EXP1_8=PB6, EXP1_10=<5V>,
    # EXP2 header pins.
    EXP2_1=PB14, EXP2_3=PB8, EXP2_5=PC10, EXP2_7=PC12, EXP2_9=<GND>,
    EXP2_2=PB13, EXP2_4=PB9, EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=<NC>

########################################
# Display Configuration
########################################
[display]
# Settings for an emulated ST7920 display (common on many 3D printers).
lcd_type: emulated_st7920
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP1_3
spi_software_sclk_pin: EXP1_5
en_pin: EXP1_4
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2

########################################
# G-Code Macros
########################################
# Custom macros that automate common tasks, like homing, calibration, or filament loading.

[gcode_macro Home]
description: Home all axes (X, Y, Z)
gcode:
    G28

[gcode_macro Z_Tilt]
description: Home all axes and then perform Z-tilt adjustment
gcode:
    G28
    Z_TILT_ADJUST

[gcode_macro Bed_Calibration]
description: Home all axes and start bed mesh calibration
gcode:
    G28
    BED_MESH_CALIBRATE

[gcode_macro Save_C]
description: Save the current configuration to disk
gcode:
    SAVE_CONFIG

[gcode_macro CUSTOM_BED_MESH_CALIBRATE]
description: Calibrates bed mesh in the area defined by the first layer bounds
gcode:
    {% set x_val = params.X|float %}
    {% set y_val = params.Y|float %}
    {% set w_val = params.W|float %}
    {% set h_val = params.H|float %}
    {% set max_x = (x_val + w_val)|round(2) %}
    {% set max_y = (y_val + h_val)|round(2) %}
    BED_MESH_CALIBRATE PROFILE=default METHOD=automatic ADAPTIVE=1 ADAPTIVE_MARGIN=2 MESH_MIN={x_val},{y_val} MESH_MAX={max_x},{max_y}

[gcode_macro LOAD_FILAMENT]
description: Heat the extruder to 200°C and load filament
gcode:
    M104 S200          # Set extruder temperature to 200°C
    M109 S200          # Wait until the extruder reaches 200°C
    M83                # Set extruder to relative mode
    G1 E10 F50         # Extrude 10mm of filament at 50mm/min
    G1 E100 F250       # Extrude 100mm of filament at 250mm/min
    G1 E10 F50         # Extrude 10mm of filament at 50mm/min
    M82                # Set extruder back to absolute mode
    M117 Filament chargé  # Display message: "Filament loaded"

[gcode_macro UNLOAD_FILAMENT]
description: Heat the extruder to 200°C and unload filament
gcode:
    M104 S200          # Set extruder temperature to 200°C
    M109 S200          # Wait until the extruder reaches 200°C
    M83                # Set extruder to relative mode
    G1 E-10 F50        # Retract 10mm of filament at 50mm/min
    G1 E-100 F250      # Retract 100mm of filament at 250mm/min
    G1 E-10 F50        # Retract 10mm of filament at 50mm/min
    M82                # Set extruder back to absolute mode
    M117 Filament déchargé  # Display message: "Filament unloaded"
