################################################################################
# General Information
################################################################################
# Author:               MushuDG
# Project:              MakerFr_I3-RS32-K
# File:                 printer.cfg
# Creation Date:        Aug. 28, 2024
# Modification Date:    Sep. 07, 2024
# Description:          Configuration file for the MakerFr_I3-RS32-K 3D printer.
#                       This file controls settings for motor control, heating,
#                       sensors, and other components, optimized for Klipper.
################################################################################

########################################
# MCU Configuration
########################################
[mcu]
# The microcontroller unit (MCU) is responsible for controlling the hardware of your 3D printer,
# including motors, heaters, sensors, etc.
# The serial parameter specifies the serial port that the microcontroller is connected to.
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_24004C001950425938323120-if00
# The baud rate controls the speed of communication between the MCU and the host (e.g., Raspberry Pi).
# A typical value is 115200.
baud: 115200

########################################
# Printer Settings
########################################
[printer]
# The kinematics type refers to the movement system of the printer.
# Cartesian kinematics is used in most printers with rectangular print beds, like Prusa or Creality.
kinematics: cartesian
# max_velocity defines the maximum movement speed of the printer in mm/s. This is the maximum speed
# the print head or bed will move.
max_velocity: 300
# max_accel determines how quickly the printer can accelerate to the set speed in mm/s².
# A higher value increases speed but may affect print quality due to vibrations.
max_accel: 500
# max_z_velocity limits the speed of vertical movement (Z-axis). This is typically much slower
# than the X and Y axes because the Z axis controls layer height and precision.
max_z_velocity: 15
# max_z_accel controls how fast the printer accelerates along the Z-axis. A lower value helps
# maintain accuracy when adjusting layer height.
max_z_accel: 100
# square_corner_velocity helps manage speed when the print head takes sharp corners.
# A lower value results in smoother but slower turns, while a higher value can introduce imperfections.
square_corner_velocity: 10.0
# IMPORTANT: If you're using input shaping (a technique to reduce print artifacts due to resonance),
# you should set square_corner_velocity to 5.0 for optimal results.
# Learn more about input shaping here: https://www.klipper3d.org/Resonance_Compensation.html

########################################
# Stepper Motor Configurations
########################################
# Each stepper motor section defines the control of the motors that move the X, Y, Z axes, 
# and the extruder. These settings include pin assignments, microstepping, rotation distance,
# and endstop configurations.

[stepper_x]
# The X axis controls the movement of the extruder head left and right.
# These pins define which physical connections on the MCU control the stepper motor.
step_pin: PC8  # Pin controlling the stepper motor's steps.
dir_pin: PC9  # Pin controlling the direction of the motor.
enable_pin: !PA15  # Inverted pin (! symbol inverts the signal).
# Microstepping allows for smoother movement by breaking full motor steps into smaller increments.
microsteps: 16
# rotation_distance is the distance the motor moves with one full step. This value is crucial
# for ensuring the printer moves the correct distance per motor rotation.
rotation_distance: 32
# Endstop pin is the physical pin connected to the X-axis endstop, which tells the printer
# when the extruder has reached the home position.
endstop_pin: !PD3
# position_min sets the minimum possible position for the X axis. A negative value means the 
# extruder can move slightly past the defined zero point.
position_min: -11
# position_endstop defines the exact location where the X axis stops during homing.
position_endstop: -11
# position_max is the maximum allowed position for the X axis.
position_max: 200
# homing_speed is the speed at which the X axis moves during the homing process.
homing_speed: 60

[stepper_y]
# The Y axis controls the movement of the print bed forward and backward.
# The configuration follows the same logic as the X axis.
step_pin: PA10
dir_pin: !PA14
enable_pin: !PA13
microsteps: 16
rotation_distance: 32
endstop_pin: !PD2
position_min: -3
position_endstop: -3
position_max: 215
homing_speed: 60

[stepper_z]
# The Z axis controls the vertical movement of the print head (up and down).
# Slower speeds and finer control are necessary for accurate layer height adjustments.
step_pin: PC6
dir_pin: PC7
enable_pin: !PA9
microsteps: 16
# A smaller rotation distance on the Z axis provides more precise control over the vertical movement.
rotation_distance: 8
# The Z axis uses a probe (like a BLTouch) instead of a mechanical endstop for homing and bed leveling.
# The virtual endstop is used here to handle this.
endstop_pin: probe:z_virtual_endstop
position_min: -1
position_max: 210
homing_speed: 6  # Much slower speed for Z axis to ensure precise leveling.

[stepper_z1]
# In dual Z-axis setups, a second Z motor ensures that the bed remains level during printing.
# This configuration mirrors the first Z axis.
step_pin: PB12
dir_pin: PB11
enable_pin: !PA8
microsteps: 16
rotation_distance: 8

[extruder]
# The extruder motor controls the filament feed into the hotend.
step_pin: PB0
dir_pin: PB1
enable_pin: !PC4
microsteps: 16
# The rotation distance affects how much filament is extruded for each step of the motor.
# This must be calibrated to ensure proper extrusion.
rotation_distance: 6.01
# nozzle_diameter and filament_diameter are used to calculate extrusion rates. 
# Most printers use a 0.4 mm nozzle and 1.75 mm filament.
nozzle_diameter: 0.400
filament_diameter: 1.750
# max_extrude_only_distance limits how far the extruder can push filament when not moving 
# to prevent filament jams.
max_extrude_only_distance: 150
# heater_pin defines the pin controlling the extruder heater.
heater_pin: PC5
# The thermistor (temperature sensor) type and pin used to measure the temperature of the hotend.
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA2
# Temperature limits for the extruder. The minimum and maximum temperatures must stay within 
# safe ranges for the filament and printer hardware.
min_temp: 0
max_temp: 250
# PID (Proportional-Integral-Derivative) tuning for maintaining stable extruder temperatures.
# These values help regulate the heater to avoid temperature fluctuations.
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982

########################################
# TMC2209 Stepper Driver Configuration
########################################
# These sections configure the TMC2209 stepper drivers, which provide advanced features 
# like silent operation and current control. The UART pin is used to communicate with 
# the stepper drivers, and the diag_pin is used for detecting errors or stalling.

[tmc2209 stepper_x]
uart_pin: PD9  # UART pin used for communication with the TMC driver on the X axis.
run_current: 1.2  # Defines how much current the stepper motor receives (in amps).
# diag_pin detects motor faults and triggers actions if necessary.
diag_pin: PD3
# interpolate enables microstep interpolation for smoother and quieter operation.
interpolate: True  # Converts 16 microsteps into 256 microsteps for smoother movements.

[tmc2209 stepper_y]
# The Y axis configuration follows the same principles as the X axis.
uart_pin: PD8
run_current: 1.2
diag_pin: PD2
interpolate: True

[tmc2209 stepper_z]
uart_pin: PB10
run_current: 1.2
diag_pin: PC3
interpolate: True

[tmc2209 stepper_z1]
# The second Z axis motor in a dual Z setup is configured identically to the first.
uart_pin: PB2
run_current: 1.2
diag_pin: PC2
interpolate: True

[tmc2209 extruder]
# The extruder stepper driver follows the same configuration as the other axes.
uart_pin: PA6
run_current: 1.2
interpolate: True

########################################
# Bed Heater Configuration
########################################
[heater_bed]
# The heated bed is crucial for preventing warping and ensuring good first-layer adhesion.
# This section defines the heater pin and thermistor type for the bed.
heater_pin: PA5  # Pin controlling the bed heater.
sensor_type: EPCOS 100K B57560G104F  # Thermistor type for measuring bed temperature.
sensor_pin: PA1  # Pin connected to the bed thermistor.
# min_temp and max_temp define the operational temperature range for the bed.
min_temp: 0
max_temp: 130  # Most heated beds operate between 60°C and 110°C, but the maximum is set to 130°C.

########################################
# Fan Configuration
########################################
# This section defines the configuration of the cooling fans.

[fan]
# The general part-cooling fan helps solidify the printed filament after extrusion.
pin: PA4  # Pin controlling the fan.
max_power: 1.0  # Maximum fan speed (100%).
shutdown_speed: 0  # The fan will stop when the printer is not printing.

[heater_fan heatbreak_cooling_fan]
# This fan cools the hotend's heatbreak to prevent heat creep and filament softening before extrusion.
pin: PA3  # Pin controlling the fan.
heater: extruder  # The fan turns on when the extruder heater is active.
heater_temp: 0.0  # Fan starts running as soon as the extruder is above room temperature.
fan_speed: 1.0  # The fan runs at full power when the extruder is hot.

########################################
# BLTouch Configuration
########################################
[bltouch]
# The BLTouch is an automatic bed leveling sensor. It uses a retractable probe to measure
# the distance between the nozzle and the bed at various points.
sensor_pin: PC13  # Pin connected to the BLTouch sensor signal.
control_pin: PC15  # Pin controlling the probe.
# Offsets are the distance between the probe and the nozzle. These values ensure the firmware
# compensates for the difference in position.
x_offset: 25.5
y_offset: 1
z_offset: 0.5  # Calibrated Z offset for precise leveling.
# Probe speed and behavior settings for the BLTouch.
speed: 5.0
set_output_mode: 5V  # Set the BLTouch to operate in 5V mode.
pin_up_touch_mode_reports_triggered: True  # Ensures accurate reporting when the pin is retracted.
stow_on_each_sample: False  # Storing the probe between each bed point slows down the process.
probe_with_touch_mode: True  # Touch mode provides more accurate probing.

########################################
# Bed Mesh Leveling
########################################
[bed_mesh]
# Bed mesh leveling creates a 3D map of the bed's surface, allowing the printer to adjust
# the Z height dynamically to compensate for any warping or unevenness.
speed: 100  # Speed of the probe during bed leveling.
horizontal_move_z: 5  # Z-axis lift during horizontal movements to prevent nozzle collisions.
mesh_min: 15, 15  # Minimum X, Y positions for probing.
mesh_max: 185, 185  # Maximum X, Y positions for probing.
probe_count: 5, 5  # Number of probe points along the X and Y axes (creates a 5x5 grid).
fade_start: 1.0  # Begin fading the mesh correction at 1 mm height.
fade_end: 10.0  # Stop applying mesh correction at 10 mm height.

########################################
# Safe Z Homing
########################################
[safe_z_home]
# Safe Z homing moves the print head to the center of the bed before homing the Z axis.
# This prevents the nozzle from crashing into clips or other bed fixtures during homing.
home_xy_position: 110, 100  # Move to the center of the bed before homing Z.
speed: 50  # Speed at which the print head moves to the homing position.
z_hop: 10  # Lift the Z axis by 10 mm to avoid collisions during movement.
z_hop_speed: 20  # Speed for lifting the Z axis.

########################################
# Z-Tilt Adjustment
########################################
[z_tilt]
# Z tilt adjustment is used in dual Z motor setups to ensure the bed remains level between
# the two Z motors. It adjusts each motor independently based on probing results.
z_positions:
   -11,0  # X positions of the two Z motors.
   220,0
points:
   40,100  # Probe points used for tilt adjustment.
   160,100
speed: 200  # Speed during tilt adjustment.
horizontal_move_z: 10  # Z lift during movements to avoid collisions.
retries: 20  # Maximum number of retries if leveling is not successful.
retry_tolerance: 0.005  # The maximum allowed difference between measurements.

########################################
# Input Shaping (Optional)
########################################
# Input shaping helps reduce vibrations that can affect print quality, especially at high speeds.
# Uncomment and configure the input shaper if needed.
# If you enable input shaping, you should adjust the square_corner_velocity to 5.0.
# More information can be found here: https://www.klipper3d.org/Resonance_Compensation.html
#[input_shaper]
#shaper_freq_x: 29
#shaper_freq_y: 32
#shaper_type: ei  # EI input shaper is a good starting point.

########################################
# Pause and Resume
########################################
[pause_resume]
# Controls the speed and behavior when pausing and resuming prints. This is useful for filament
# changes or pausing the printer for other reasons.
recover_velocity: 50.  # Speed to resume printing after a pause.

########################################
# LED Configuration (Neopixels)
########################################
[neopixel leds]
# Configuration for Neopixel LED control on the printer.
pin: PC11  # Pin connected to the Neopixel LEDs.
chain_count: 22  # Number of Neopixels in the chain.
color_order: GRB  # Order of color channels for the LEDs.
# Initial LED colors (set to off initially).
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0

# Various LED effects for different printing statuses (e.g., static, breathing, heating, etc.).
[led_effect led_static]
autostart: true  # Start this effect when the printer turns on.
leds:
    neopixel:leds
layers:
    static 1 0 top (1.0, 1.0, 1.0)  # Static white light.

[led_effect breathing_effect]
autostart: false  # This effect doesn't start automatically.
frame_rate: 24  # Speed of the breathing effect.
leds:
    neopixel:leds
layers:
    breathing 12 0 top (1.0, 1.0, 0.0), (1.0, 1.0, 0.0)  # Yellow breathing effect.

[led_effect heating_effect]
autostart: false  # Trigger this effect manually (e.g., during bed heating).
frame_rate: 24
heater: heater_bed  # Link the effect to the bed heater.
leds:
    neopixel:leds
layers:
    heater 50 0 add (0, 0, 1), (1, 0, 0)  # Heating effect: blue to red transition.

[led_effect printing_effect]
autostart: false  # Trigger this effect when the printer is printing.
leds:
    neopixel:leds
layers:
    static 1 0 top (0.0, 0.5, 1.0)  # Light blue during printing.

[led_effect pause_effect]
autostart: false  # Trigger this effect when the print is paused.
leds:
    neopixel:leds
layers:
    static 1 0 top (1.0, 1.0, 0.0)  # Yellow during pause.

[led_effect print_finished]
autostart: false  # Trigger this effect when the print finishes.
leds:
    neopixel:leds
layers:
    static 1 0 top (0.0, 1.0, 0.0)  # Green when print is finished.

########################################
# G-Code Macros
########################################
# Macros are custom commands that automate common tasks like homing the printer,
# starting bed leveling, or loading/unloading filament.

[gcode_macro Home]
# Home all axes (X, Y, Z) using the G28 command.
description: Home all axes (X, Y, Z)
gcode:
    G28

[gcode_macro Z_Tilt]
# Home all axes, then perform Z tilt adjustment to level the bed between the two Z motors.
description: Home all axes and then perform Z-tilt adjustment
gcode:
    G28
    Z_TILT_ADJUST

[gcode_macro Bed_Calibration]
# Home all axes, then run a bed mesh calibration to map the surface of the bed.
description: Home all axes and start bed mesh calibration
gcode:
    G28
    BED_MESH_CALIBRATE

[gcode_macro Save_C]
# Save the current configuration to the printer’s configuration file.
description: Save the current configuration to disk
gcode:
    SAVE_CONFIG

[gcode_macro CUSTOM_BED_MESH_CALIBRATE]
# Perform bed mesh calibration for a specific area based on the dimensions provided.
description: Calibrates bed mesh in the area defined by the first layer bounds
gcode:
    {% set x_val = params.X|float %}
    {% set y_val = params.Y|float %}
    {% set w_val = params.W|float %}
    {% set h_val = params.H|float %}
    {% set max_x = (x_val + w_val)|round(2) %}
    {% set max_y = (y_val + h_val)|round(2) %}
    BED_MESH_CALIBRATE PROFILE=default METHOD=automatic ADAPTIVE=1 ADAPTIVE_MARGIN=2 MESH_MIN={x_val},{y_val} MESH_MAX={max_x},{max_y}

[gcode_macro LOAD_FILAMENT]
# Heat the extruder to 200°C and load filament into the hotend.
description: Heat the extruder to 200°C and load filament
gcode:
    M104 S200  # Set extruder temperature to 200°C
    M109 S200  # Wait until the extruder reaches 200°C
    M83  # Set extruder to relative mode (for controlled extrusion)
    G1 E10 F50  # Slowly extrude 10mm of filament at 50mm/min
    G1 E100 F250  # Extrude 100mm of filament at 250mm/min for faster loading
    G1 E10 F50  # Extrude 10mm of filament slowly at the end
    M82  # Set extruder back to absolute mode
    M117 Filament chargé  # Display message: "Filament loaded"

[gcode_macro UNLOAD_FILAMENT]
# Heat the extruder to 200°C and unload filament from the hotend.
description: Heat the extruder to 200°C and unload filament
gcode:
    M104 S200  # Set extruder temperature to 200°C
    M109 S200  # Wait until the extruder reaches 200°C
    M83  # Set extruder to relative mode
    G1 E-10 F50  # Slowly retract 10mm of filament at 50mm/min
    G1 E-100 F250  # Retract 100mm of filament at 250mm/min for faster unloading
    G1 E-10 F50  # Final slow retraction of 10mm
    M82  # Set extruder back to absolute mode
    M117 Filament déchargé  # Display message: "Filament unloaded"

[gcode_macro LEDS_ON]
# This macro turns on the static LED effect (white light).
gcode:
    SET_LED_EFFECT EFFECT=led_static REPLACE=1  # Turn on static LED effect

[gcode_macro LEDS_BREATHING]
# This macro starts the breathing LED effect (yellow color).
gcode:
    SET_LED_EFFECT EFFECT=breathing_effect REPLACE=1  # Start breathing LED effect

[gcode_macro LEDS_OFF]
# This macro turns off all LED effects.
gcode:
    STOP_LED_EFFECTS  # Turn off all LED effects

[gcode_macro LEDS_HEATING]
# This macro starts the heating LED effect (blue to red).
gcode:
    SET_LED_EFFECT EFFECT=heating_effect REPLACE=1  # Start heating LED effect

[gcode_macro LEDS_PRINTING]
# This macro starts the printing LED effect (light blue).
gcode:
    SET_LED_EFFECT EFFECT=printing_effect REPLACE=1  # Start printing LED effect

[gcode_macro LEDS_PAUSE]
# This macro starts the pause LED effect (yellow).
gcode:
    SET_LED_EFFECT EFFECT=pause_effect REPLACE=1  # Start pause LED effect

[gcode_macro LEDS_PRINT_FINISHED]
# This macro starts the print finished LED effect (green).
gcode:
    SET_LED_EFFECT EFFECT=print_finished REPLACE=1  # Start print finished LED effect
